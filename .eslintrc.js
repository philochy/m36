module.exports = {
	root: true,
	env: {
		browser: true,
		es2021: true,
		node: true,
		jest: true,
	},
	parserOptions: {
		ecmaVersion: 'latest',
		parser: '@babel/eslint-parser',
		requireConfigFile: false,
		sourceType: 'module',
	},
	extends: [
		'@nuxtjs',
		'plugin:nuxt/recommended',
		'plugin:vue/strongly-recommended',
		'eslint:recommended',
		'prettier',
	],
	plugins: ['prettier'],
	rules: {
		'vue/max-attributes-per-line': [
			'error',
			{
				singleline: 3,
				multiline: 1,
			},
		],
		'vue/multi-word-component-names': 'off',
		'vue/no-unused-properties': [
			'error',
			{
				groups: ['props', 'data', 'computed', 'methods'],
			},
		],
		'vue/no-v-html': 'off',
		'no-lonely-if': 0,
		'no-console': 'warn',
		'no-debugger': 'error',
		'no-dupe-args': 'error',
		'no-dupe-keys': 'error',
		'no-duplicate-case': 'error',
		'no-empty': 'warn',
		'no-ex-assign': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-semi': 'error',
		'no-func-assign': 'error',
		'no-obj-calls': 'error',
		'no-unexpected-multiline': 'error',
		'no-unreachable': 'error',
		'use-isnan': 'error',
		'valid-typeof': 'error',
		// Best Practices
		'array-callback-return': 'error',
		curly: ['error', 'all'],
		'default-case': 'warn',
		'dot-notation': 'warn',
		eqeqeq: 'error',
		'no-caller': 'error',
		'no-else-return': 'warn',
		'no-empty-function': 'warn',
		'no-eval': 'error',
		'no-extra-bind': 'warn',
		'no-fallthrough': 'error',
		'no-floating-decimal': 'error',
		'no-implied-eval': 'error',
		'no-lone-blocks': 'error',
		'no-multi-spaces': 'warn',
		'no-new-func': 'error',
		'no-new-wrappers': 'error',
		'no-octal': 'error',
		'no-return-await': 'warn',
		'no-self-compare': 'error',
		'no-throw-literal': 'error',
		'no-unused-expressions': 'error',
		'no-useless-concat': 'warn',
		'no-useless-return': 'warn',
		'prefer-promise-reject-errors': 'warn',
		radix: 'error',
		// Variables
		'no-shadow': 'warn',
		'no-shadow-restricted-names': 'error',
		'no-undef': 'error',
		'no-unused-vars': 'error',
		'no-use-before-define': 'error',
		// Stylistic Issues
		'array-bracket-spacing': ['warn', 'never'],
		'block-spacing': ['warn', 'always'],
		'brace-style': [
			'warn',
			'1tbs',
			{
				allowSingleLine: true,
			},
		],
		camelcase: 'warn',
		'comma-dangle': ['warn', 'always-multiline'],
		'comma-spacing': [
			'warn',
			{
				before: false,
				after: true,
			},
		],
		'comma-style': ['warn', 'last'],
		'computed-property-spacing': ['warn', 'never'],
		'func-call-spacing': ['warn', 'never'],
		'key-spacing': [
			'warn',
			{
				beforeColon: false,
				afterColon: true,
			},
		],
		'keyword-spacing': [
			'warn',
			{
				before: true,
				after: true,
			},
		],
		'new-cap': 'warn',
		'no-array-constructor': 'warn',
		'no-mixed-spaces-and-tabs': 'warn',
		'no-multiple-empty-lines': [
			'warn',
			{
				max: 2,
				maxEOF: 1,
			},
		],
		'no-new-object': 'warn',
		'no-trailing-spaces': 'warn',
		'object-curly-spacing': ['warn', 'always'],
		'padded-blocks': ['warn', 'never'],
		'quote-props': ['warn', 'as-needed'],
		quotes: [
			'error',
			'single',
			{
				avoidEscape: true,
			},
		],
		semi: ['warn', 'always'],
		'semi-spacing': 'warn',
		'space-before-blocks': 'warn',
		'space-before-function-paren': [
			'warn',
			{
				anonymous: 'always',
				named: 'never',
				asyncArrow: 'always',
			},
		],
		'space-in-parens': ['warn', 'never'],
		'space-infix-ops': 'warn',
		'space-unary-ops': [
			'warn',
			{
				words: true,
				nonwords: false,
			},
		],
		'spaced-comment': ['warn', 'always'],
		// ES6
		'arrow-spacing': [
			'warn',
			{
				before: true,
				after: true,
			},
		],
		'constructor-super': 'error',
		'no-const-assign': 'error',
		'no-dupe-class-members': 'error',
		'no-duplicate-imports': 'warn',
		'no-this-before-super': 'error',
		'no-useless-computed-key': 'warn',
		'no-useless-constructor': 'warn',
		'no-var': 'warn',
		'object-shorthand': ['warn', 'properties'],
		'prefer-arrow-callback': 'warn',
		'prefer-const': 'warn',
		'prefer-rest-params': 'warn',
		'prefer-spread': 'warn',
		'prefer-template': 'warn',
		'require-yield': 'error',
	},
	globals: {
		$: 'readonly',
	},
};
